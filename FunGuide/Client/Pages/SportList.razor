@page "/sportslist"
@inject ISportsmanService SportsmanService;
@inject ISportService SportService;
@inject IJSRuntime JSRuntime;
@inject NavigationManager navigationManager;

<PageTitle>Види спорту</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-6">
            <table class="table col-6" id="listOfSports">
    <thead>
        <tr>
            <th>Name</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var sport in SportService.Sports)
        {
            <tr>
            <td>@sport.Name</td>
            <td>
            <button class="btn btn-primary" ><i class="oi oi-pencil"></i></button>
            <button class="btn btn-warning" @onclick="(()=>DeleteSport(sport.Id))"><i class="oi oi-delete"></i></button></td>
            </tr>
            
        }
    </tbody>

</table>

        </div>
        
<div class="col-6">
    <button class="btn btn-primary">Додати спорт до бази</button>
    <EditForm Model="sport" OnSubmit="CreateSport">
        <label>Назва спорту</label>
        <InputText @bind-Value="sport.Name" class="form-control"></InputText>
        <button type="submit" class="btn btn-primary">Додати</button>
    </EditForm>
</div>
    </div>
</div>



@code {
    Sport sport = new Sport { };
    protected override async Task OnInitializedAsync()
    {     
        await SportService.GetSports();
    }

    public async Task SearchSportsmen(SportsmanSearchModel s)
    {


    }

    public async Task DeleteSport(int id)
    {
        await SportService.DeleteSport(id);
    }
    void ShowSport(int id)
    {
        navigationManager.NavigateTo($"/sportslist/{id}");
    }
    public async Task CreateSport()
    {
        await SportService.CreateSport(sport);
    }
}
