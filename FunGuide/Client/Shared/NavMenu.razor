@inject ISportsmanService SportsmanService
@inject NavigationManager navigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Довідник фаната</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="row">
            <div class="nav-item pb-3 px-3 col-6">
                <NavLink class="nav-link " href="/" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> База
                </NavLink>
            </div>

            <div class="btn-group col-6 ">
                <button type="button" class="btn nav-item dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    TEst
                </button>
                <div class="dropdown-menu">
                    @foreach (var sport in SportsmanService.Sports)
                    {
                        <NavLink class="nav-link" Match="NavLinkMatch.All" @onclick="(()=>ShowSportCategory(sport.Id))">
                            @sport.Name
                        </NavLink>
                    }
                </div>
            </div>
        </div>




    </nav>
</div>


@code {
    protected override async Task OnInitializedAsync()
    {
        await SportsmanService.GetSports();
    }
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;

    }
    void ShowSportCategory(int id)
    {
        navigationManager.NavigateTo($"/sportcategory/{id}");
    }
}
